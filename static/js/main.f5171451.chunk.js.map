{"version":3,"sources":["views/helpers/gh-token.jsx","views/partials/header.jsx","views/helpers/graphql-querys.jsx","views/helpers/functions.jsx","views/partials/user-info.jsx","views/partials/github-stats.jsx","views/partials/user-streaks.jsx","views/partials/most-used-langs.jsx","views/partials/user-contributions.jsx","views/partials/templates/card-repositories.jsx","views/partials/repositories.jsx","views/partials/user-location-devs.jsx","views/index.jsx","views/error.jsx","router/router.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["GH_TOKEN","Buffer","from","toString","Header","Fragment","className","href","target","rel","Component","GetUserdata","username","a","headers","body","fetch","method","JSON","stringify","response","json","data","GetUserRepositories","UserLocationDevs","location","Masonry","Macy","container","trueOrder","waitForImages","columns","breakAt","IntFormat","number","Intl","NumberFormat","format","CopyThisCode","url","navigator","clipboard","writeText","Swal","fire","icon","title","text","UserInfo","state","showBio","showLocation","showGists","showWebsite","showHistory","showRepositories","dataVerify","props","userdata","bio","setState","gists","totalCount","repositories","websiteUrl","contributionsCollection","contributionCalendar","totalContributions","masonry","this","prevProps","prevState","login","name","src","avatarUrl","alt","faMapMarkerAlt","faUserFriends","followers","following","faCode","faFileCode","faChartBar","GitHubStats","urlStats","showGitHubStats","onClick","CopyCode","UserStreaks","urlStreaks","showUserStreaks","MostUsedLanguages","urlLangs","showMostUsedLangs","UserContributions","urlContributions","showUserContributions","CardRepositories","showDescription","showTopic","showBranch","showStar","repo","description","repositoryTopics","nodes","length","forkCount","stargazerCount","map","topic","i","primaryLanguage","faCodeBranch","faStar","pushedAt","Repositories","repos","count","getAllRepositories","then","res","user","edges","slice","node","LocationDevs","usersCount","getAllDevs","search","userCount","Index","message","error","usernameRef","React","createRef","searchUser","current","value","masonryEffect","enterKeyDown","e","key","recalculate","copyStatCode","id","faGithub","ref","onKeyDown","type","placeholder","autoFocus","Error","Router","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5171451.chunk.js","sourcesContent":["export const GH_TOKEN = Buffer.from(\"Z2hwX2RCRXNaeXRSQ0xCZVZjVnpEVDlwWkFxNElnQlVxODNzOE5HdA==\", 'base64').toString('ascii');\r\n/* \r\n    GitHub prohibits pushing a personal access token in a public repository, \r\n    so the token you are seeing has already been automatically deactivated by GitHub, \r\n    that is why you must put your own token if you want to use this application on your localhost.\r\n*/","import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <header className=\"shadow\">\r\n                    <div className=\"container text-center pt-2 pb-3\">\r\n                        <h1 className=\"display-3\"><i>GitHub Stats</i></h1>\r\n                        <h3>See all public stats for a GitHub profile</h3>\r\n                        <p className=\"h5\">Development and Web Design by: <span className=\"badge bg-dark\"><a href=\"https://bit.ly/hernanreiq\" target=\"_blank\" rel=\"noreferrer\" className=\"text-decoration-none text-warning\">Hernan.Reiq</a></span></p>\r\n                    </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import { GH_TOKEN } from \"./gh-token\";\r\n\r\nexport const GetUserdata = async (username) => {\r\n    const headers = {\r\n        'Authorization': `bearer ${GH_TOKEN}`,\r\n    }\r\n    const body = {\r\n        \"query\": `query {\r\n            user(login: \"${username}\") {\r\n                login\r\n                location\r\n                url\r\n                followers {\r\n                    totalCount\r\n                }\r\n                following {\r\n                    totalCount\r\n                }\r\n                bio\r\n                avatarUrl\r\n                websiteUrl\r\n                gists {\r\n                    totalCount\r\n                }\r\n                repositories(privacy: PUBLIC, ownerAffiliations: OWNER) {\r\n                    totalCount\r\n                }\r\n                name\r\n                contributionsCollection {\r\n                    contributionCalendar {\r\n                        totalContributions\r\n                    }\r\n                }\r\n            }\r\n        }`\r\n    }\r\n    const response = await fetch('https://api.github.com/graphql', { method: 'POST', body: JSON.stringify(body), headers: headers })\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nexport const GetUserRepositories = async (username) => {\r\n    const headers = {\r\n        'Authorization': `bearer ${GH_TOKEN}`,\r\n    }\r\n    const body = {\r\n        \"query\": `query {\r\n            user(login: \"${username}\") {\r\n                repositories(privacy: PUBLIC, ownerAffiliations: OWNER, orderBy: {field: PUSHED_AT, direction: DESC}, first: 6) {\r\n                    edges {\r\n                        node {\r\n                            name\r\n                            url\r\n                            pushedAt\r\n                            stargazerCount\r\n                            description\r\n                            primaryLanguage {\r\n                                name\r\n                            }\r\n                            repositoryTopics(last: 10) {\r\n                                nodes {\r\n                                    topic {\r\n                                        name\r\n                                    }\r\n                                }\r\n                            }\r\n                        forkCount\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }`\r\n    }\r\n    const response = await fetch('https://api.github.com/graphql', { method: 'POST', body: JSON.stringify(body), headers: headers })\r\n    const data = await response.json()\r\n    return data\r\n}\r\n\r\nexport const UserLocationDevs = async (location) => {\r\n    const headers = {\r\n        'Authorization': `bearer ${GH_TOKEN}`,\r\n    }\r\n    const body = {\r\n        \"query\": `query {\r\n            search(query: \r\n                \"\"\"\r\n                location:\"${location}\"\r\n                \"\"\", type: USER) {\r\n                userCount\r\n            }\r\n        }`\r\n    }\r\n    const response = await fetch('https://api.github.com/graphql', { method: 'POST', body: JSON.stringify(body), headers: headers })\r\n    const data = await response.json()\r\n    return data\r\n}","import Macy from \"macy\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const Masonry = () => {\r\n    var macyInstance = new Macy({\r\n        container: `#masonry`,\r\n        trueOrder: true,\r\n        waitForImages: false,\r\n        columns: 2,\r\n        breakAt: {\r\n            768: 1\r\n        }\r\n    });\r\n    return macyInstance;\r\n}\r\n\r\nexport const IntFormat = (number) => {\r\n    var result = new Intl.NumberFormat('en-US').format(number);\r\n    return result;\r\n}\r\n\r\nexport const CopyThisCode = (url) => {\r\n    navigator.clipboard.writeText(`![User Stats](${url})`);\r\n    Swal.fire({\r\n        icon: 'success',\r\n        title: `Code copied successfully!`,\r\n        text: `Paste this Markdown code into the README.md file of your profile.`\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt, faUserFriends, faCode, faFileCode, faChartBar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { IntFormat } from \"../helpers/functions\";\r\n\r\nclass UserInfo extends Component {\r\n    state = {\r\n        showBio: false,\r\n        showLocation: false,\r\n        showGists: false,\r\n        showWebsite: false,\r\n        showHistory: false,\r\n        showRepositories: false\r\n    }\r\n\r\n    dataVerify = () => {\r\n        if (this.props.userdata.bio) {\r\n            this.setState({\r\n                showBio: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showBio: false\r\n            })\r\n        }\r\n        if (this.props.userdata.location) {\r\n            this.setState({\r\n                showLocation: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showLocation: false\r\n            })\r\n        }\r\n        if (this.props.userdata.gists.totalCount > 0) {\r\n            this.setState({\r\n                showGists: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showGists: false\r\n            })\r\n        }\r\n        if (this.props.userdata.repositories.totalCount > 0) {\r\n            this.setState({\r\n                showRepositories: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showRepositories: false\r\n            })\r\n        }\r\n        if (this.props.userdata.websiteUrl) {\r\n            this.setState({\r\n                showWebsite: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showWebsite: false\r\n            })\r\n        }\r\n        if (this.props.userdata.contributionsCollection.contributionCalendar.totalContributions > 0) {\r\n            this.setState({\r\n                showHistory: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showHistory: false\r\n            })\r\n        }\r\n        this.props.masonry();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dataVerify();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userdata.login !== this.props.userdata.login) {\r\n            this.dataVerify();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"card shadow mb-5\">\r\n                        <div className=\"card-header text-center\">\r\n                            <h2 className=\"card-title mb-0 text-white\">{this.props.userdata.name}</h2>\r\n                            <a href={this.props.userdata.url} target=\"_blank\" rel=\"noreferrer\" className=\"text-warning text-decoration-none\">{this.props.userdata.login}</a>\r\n                        </div>\r\n                        <div className=\"card-body bg-dark text-white\">\r\n                            <img src={this.props.userdata.avatarUrl} alt={this.props.userdata.name} className=\"card-img mb-2\" />\r\n                            {this.state.showBio &&\r\n                                <p className=\"spaces\">{this.props.userdata.bio}</p>\r\n                            }\r\n                            {this.state.showLocation &&\r\n                                <p className=\"mb-0\"><FontAwesomeIcon icon={faMapMarkerAlt} /> {this.props.userdata.location}</p>\r\n                            }\r\n                            <p className=\"mb-0\"><FontAwesomeIcon icon={faUserFriends} /> {IntFormat(this.props.userdata.followers.totalCount)} followers / {IntFormat(this.props.userdata.following.totalCount)} following</p>\r\n                            <p className=\"mb-0\"><FontAwesomeIcon icon={faCode} /> {IntFormat(this.props.userdata.repositories.totalCount)} repositories</p>\r\n                            {this.state.showGists ?\r\n                                <p className=\"mb-0\"><FontAwesomeIcon icon={faFileCode} /> {IntFormat(this.props.userdata.gists.totalCount)} gists</p> : ''\r\n                            }\r\n                            {this.state.showHistory &&\r\n                                <p className=\"mb-0\"><FontAwesomeIcon icon={faChartBar} /> {IntFormat(this.props.userdata.contributionsCollection.contributionCalendar.totalContributions)} total contributions</p>\r\n                            }\r\n                        </div>\r\n                        {this.state.showWebsite || this.state.showGists || this.state.showRepositories ?\r\n                            <div className=\"card-footer bg-secondary\">\r\n                                {this.state.showRepositories &&\r\n                                    <a href={`https://github.com/${this.props.userdata.login}?tab=repositories`} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-success w-100 my-2\">Repositories</a>\r\n                                }\r\n                                {this.state.showGists &&\r\n                                    <a href={`https://gist.github.com/${this.props.userdata.login}`} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-success w-100 my-2\">Gists</a>\r\n                                }\r\n                                {this.state.showWebsite &&\r\n                                    <a href={this.props.userdata.websiteUrl} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-primary w-100 my-2\">Link in bio</a>\r\n                                }\r\n                            </div> : ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserInfo;","import React, { Component } from \"react\";\r\n\r\nclass GitHubStats extends Component {\r\n    state = {\r\n        urlStats: ''\r\n    }\r\n\r\n    showGitHubStats = (username) => {\r\n        this.setState({\r\n            urlStats: `https://github-readme-stats.vercel.app/api?username=${username}&show_icons=true&theme=tokyonight&line_height=27&count_private=true`\r\n        })\r\n        this.props.masonry();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showGitHubStats(this.props.userdata.login);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userdata.login !== this.props.userdata.login) {\r\n            this.showGitHubStats(this.props.userdata.login);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.urlStats &&\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card shadow mb-5\">\r\n                            <div className=\"card-header text-center\">\r\n                                <h2 className=\"card-title mb-0 text-white\">GitHub Stats</h2>\r\n                            </div>\r\n                            <div className=\"card-body bg-dark text-white\">\r\n                                <img src={this.state.urlStats} alt={this.props.userdata.name} className=\"card-img\" />\r\n                            </div>\r\n                            <div className=\"card-footer text-center bg-secondary\">\r\n                            <button onClick={() => {this.props.CopyCode(this.state.urlStats)}} className=\"btn btn-success w-100\">Put it on your GitHub profile</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GitHubStats;","import React, { Component } from \"react\";\r\n\r\nclass UserStreaks extends Component {\r\n    state = {\r\n        urlStreaks: ''\r\n    }\r\n\r\n    showUserStreaks = (username) => {\r\n        this.setState({\r\n            urlStreaks: `https://github-readme-streak-stats.herokuapp.com/?user=${username}&theme=tokyonight&count_private=true`\r\n        })\r\n        this.props.masonry();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showUserStreaks(this.props.userdata.login);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userdata.login !== this.props.userdata.login) {\r\n            this.showUserStreaks(this.props.userdata.login);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.urlStreaks &&\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card shadow mb-5\">\r\n                            <div className=\"card-header text-center\">\r\n                                <h2 className=\"card-title mb-0 text-white\">User Streaks</h2>\r\n                            </div>\r\n                            <div className=\"card-body bg-dark text-white\">\r\n                                <img src={this.state.urlStreaks} alt={this.props.userdata.name} className=\"card-img\" />\r\n                            </div>\r\n                            <div className=\"card-footer text-center bg-secondary\">\r\n                                <button onClick={() => {this.props.CopyCode(this.state.urlStreaks)}} className=\"btn btn-success w-100\">Put it on your GitHub profile</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserStreaks;","import React, { Component } from \"react\";\r\n\r\nclass MostUsedLanguages extends Component {\r\n    state = {\r\n        urlLangs: ''\r\n    }\r\n\r\n    showMostUsedLangs = (username) => {\r\n        this.setState({\r\n            urlLangs: `https://github-readme-stats.vercel.app/api/top-langs/?username=${username}&layout=compact&show_icons=true&langs_count=10,html&theme=tokyonight&count_private=true`\r\n        })\r\n        this.props.masonry();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showMostUsedLangs(this.props.userdata.login);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userdata.login !== this.props.userdata.login) {\r\n            this.showMostUsedLangs(this.props.userdata.login);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.userdata.repositories.totalCount &&\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card shadow mb-5\">\r\n                            <div className=\"card-header text-center\">\r\n                                <h2 className=\"card-title mb-0 text-white\">Top user languages</h2>\r\n                            </div>\r\n                            <div className=\"card-body bg-dark text-white\">\r\n                                <img src={this.state.urlLangs} alt={this.props.userdata.name} className=\"card-img\" />\r\n                            </div>\r\n                            <div className=\"card-footer text-center bg-secondary\">\r\n                            <button onClick={() => {this.props.CopyCode(this.state.urlLangs)}} className=\"btn btn-success w-100\">Put it on your GitHub profile</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MostUsedLanguages;","import React, { Component } from \"react\";\r\n\r\nclass UserContributions extends Component {\r\n    state = {\r\n        urlContributions: ''\r\n    }\r\n\r\n    showUserContributions = (username) => {\r\n        this.setState({\r\n            urlContributions: `https://activity-graph.herokuapp.com/graph?username=${username}&bg_color=1a1b27&color=ffffff&line=012b50&point=ffffff&area=true&hide_border=true&count_private=true`\r\n        })\r\n        this.props.masonry();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.showUserContributions(this.props.userdata.login);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userdata.login !== this.props.userdata.login) {\r\n            this.showUserContributions(this.props.userdata.login);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.urlContributions &&\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card shadow mb-5\">\r\n                            <div className=\"card-header text-center\">\r\n                                <h2 className=\"card-title mb-0 text-white\">User Contributions</h2>\r\n                            </div>\r\n                            <div className=\"card-body bg-dark text-white\">\r\n                                <img src={this.state.urlContributions} alt={this.props.userdata.name} className=\"card-img\" />\r\n                            </div>\r\n                            <div className=\"card-footer text-center bg-secondary\">\r\n                            <button onClick={() => {this.props.CopyCode(this.state.urlContributions)}} className=\"btn btn-success w-100\">Put it on your GitHub profile</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserContributions;","import React, { Component } from \"react\";\r\nimport { format } from \"timeago.js\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faCodeBranch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { IntFormat } from \"../../helpers/functions\";\r\n\r\nclass CardRepositories extends Component {\r\n    state = {\r\n        showDescription: false,\r\n        showTopic: false,\r\n        showBranch: false,\r\n        showStar: false\r\n    }\r\n\r\n    dataVerify = () => {\r\n        if (this.props.repo.description) {\r\n            this.setState({\r\n                showDescription: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showDescription: false\r\n            })\r\n        }\r\n        if (this.props.repo.repositoryTopics.nodes.length > 0) {\r\n            this.setState({\r\n                showTopic: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showTopic: false\r\n            })\r\n        }\r\n        if (this.props.repo.forkCount > 0) {\r\n            this.setState({\r\n                showBranch: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showBranch: false\r\n            })\r\n        }\r\n        if (this.props.repo.stargazerCount > 0) {\r\n            this.setState({\r\n                showStar: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                showStar: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dataVerify();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.repo.name !== this.props.repo.name) {\r\n            this.dataVerify();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"card shadow mb-3\">\r\n                    <div className=\"card-header\">\r\n                        <h4 className=\"card-title mb-0\">\r\n                            <a href={this.props.repo.url} className=\"text-decoration-none text-warning\" target=\"_blank\" rel=\"noreferrer\">{this.props.repo.name}</a>\r\n                        </h4>\r\n                    </div>\r\n                    {this.state.showDescription || this.state.showTopic ?\r\n                        <div className=\"card-body bg-dark-2\">\r\n                            {this.state.showDescription &&\r\n                                <p className=\"card-text\">{this.props.repo.description}</p>\r\n                            }\r\n                            {this.state.showTopic &&\r\n                                <p className=\"mb-0 h5\">\r\n                                    {this.props.repo.repositoryTopics.nodes.map((topic, i) => {\r\n                                        return (\r\n                                            <span className=\"badge bg-primary me-2 mb-1\" key={i}>{topic.topic.name}</span>\r\n                                        )\r\n                                    })\r\n                                    }\r\n                                </p>\r\n                            }\r\n                        </div> : ''\r\n                    }\r\n                    <div className=\"card-footer bg-info-2\">\r\n                        <p className=\"mb-0\">\r\n                            {this.props.repo.primaryLanguage &&\r\n                                <span className=\"me-3 badge bg-dark text-white\">{this.props.repo.primaryLanguage.name}</span>\r\n                            }\r\n                            {this.state.showBranch &&\r\n                                <span className=\"me-3\">\r\n                                    <FontAwesomeIcon icon={faCodeBranch} /> {IntFormat(this.props.repo.forkCount)}\r\n                                </span>\r\n                            }\r\n                            {this.state.showStar &&\r\n                                <span className=\"me-3\">\r\n                                    <FontAwesomeIcon icon={faStar} /> {IntFormat(this.props.repo.stargazerCount)}\r\n                                </span>\r\n                            }\r\n                            <span className=\"me-3 badge bg-dark\">Updated {format(this.props.repo.pushedAt)}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardRepositories;","import React, { Component } from \"react\";\r\nimport CardRepositories from \"./templates/card-repositories\";\r\nimport { GetUserRepositories } from \"../helpers/graphql-querys\";\r\n\r\nclass Repositories extends Component {\r\n    state = {\r\n        repos: [],\r\n        count: 0\r\n    }\r\n\r\n    getAllRepositories = (username) => {\r\n        if (this.props.userdata.repositories.totalCount) {\r\n            var getUserRepos = GetUserRepositories(username)\r\n            getUserRepos.then(res => {\r\n                if (res.data.user.repositories.edges.length > 0) {\r\n                    this.setState({\r\n                        repos: res.data.user.repositories.edges,\r\n                        count: res.data.user.repositories.edges.length\r\n                    })\r\n                    this.props.masonry();\r\n                } else {\r\n                    this.setState({\r\n                        repos: [],\r\n                        count: 0\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                repos: [],\r\n                count: 0\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllRepositories(this.props.userdata.login);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userdata.login !== this.props.userdata.login) {\r\n            this.getAllRepositories(this.props.userdata.login);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.count > 0 &&\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"card shadow mb-5\">\r\n                            <div className=\"card-header text-center\">\r\n                                <h2 className=\"card-title mb-0 text-white\">Repositories</h2>\r\n                            </div>\r\n                            <div className=\"card-body bg-dark text-white pb-0\">\r\n                                {this.state.repos.slice(0, 5).map((repo, i) => {\r\n                                    return (\r\n                                        <CardRepositories key={i} repo={repo.node} />\r\n                                    )\r\n                                })\r\n                                }\r\n                            </div>\r\n                            {this.state.count > 5 &&\r\n                                <div className=\"card-footer text-center bg-secondary\">\r\n                                    <a href={`https://github.com/${this.props.userdata.login}?tab=repositories`} target=\"_blank\" rel=\"noreferrer\" className=\"btn btn-success w-100\">More repositories</a>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Repositories;","import React, { Component } from \"react\";\r\nimport { UserLocationDevs } from \"../helpers/graphql-querys\";\r\nimport { IntFormat } from \"../helpers/functions\";\r\n\r\nclass LocationDevs extends Component {\r\n    state = {\r\n        usersCount: 0\r\n    }\r\n\r\n    getAllDevs = (userdata) => {\r\n        var userLocationDevs = UserLocationDevs(userdata.location)\r\n        userLocationDevs.then(res => {\r\n            this.setState({\r\n                usersCount: res.data.search.userCount\r\n            });\r\n        });\r\n        this.props.masonry();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllDevs(this.props.userdata);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.userdata !== this.props.userdata) {\r\n            this.getAllDevs(this.props.userdata);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"card shadow mb-5\">\r\n                        <div className=\"card-header text-center\">\r\n                            <h2 className=\"card-title mb-0 text-white\">These are the GitHub users that match the location</h2>\r\n                        </div>\r\n                        <div className=\"card-body bg-dark text-white\">\r\n                            <p className=\"display-1 text-center mb-0\">{IntFormat(this.state.usersCount)}</p>\r\n                        </div>\r\n                        <div className=\"card-footer bg-secondary \">\r\n                            <h3 className=\"mb-0 text-center text-white\">Location: <b>{this.props.userdata.location}</b></h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LocationDevs;","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { GetUserdata } from \"./helpers/graphql-querys\";\r\nimport UserInfo from \"./partials/user-info\";\r\nimport GitHubStats from \"./partials/github-stats\";\r\nimport UserStreaks from \"./partials/user-streaks\";\r\nimport MostUsedLanguages from \"./partials/most-used-langs\";\r\nimport UserContributions from \"./partials/user-contributions\";\r\nimport Repositories from \"./partials/repositories\";\r\nimport LocationDevs from \"./partials/user-location-devs\";\r\nimport { Masonry, CopyThisCode } from \"./helpers/functions\";\r\n\r\nclass Index extends Component {\r\n    state = {\r\n        userdata: false,\r\n        message: 'You must perform a search',\r\n        error: true\r\n    }\r\n\r\n    usernameRef = React.createRef();\r\n\r\n    searchUser = () => {\r\n        var username = this.usernameRef.current.value;\r\n        if (username !== '') {\r\n            var getUserData = GetUserdata(username)\r\n            getUserData.then(res => {\r\n                if (res.data.user) {\r\n                    this.setState({\r\n                        userdata: res.data.user,\r\n                        message: '',\r\n                        error: false\r\n                    })\r\n                    this.masonryEffect();\r\n                } else {\r\n                    this.setState({\r\n                        userdata: false,\r\n                        message: 'The user you searched for does not exist',\r\n                        error: true\r\n                    })\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                userdata: false,\r\n                message: 'You must perform a search',\r\n                error: true\r\n            })\r\n        }\r\n    }\r\n\r\n    enterKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.searchUser();\r\n        }\r\n    }\r\n\r\n    masonryEffect = () => {\r\n        var macyInstance = Masonry();\r\n        macyInstance.recalculate(true);\r\n    }\r\n\r\n    copyStatCode = (url) => {\r\n        CopyThisCode(url);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <main>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 offset-md-2 my-5\">\r\n                                <div className=\"input-group mb-3 rounded\">\r\n                                    <span className=\"input-group-text\" id=\"username\">\r\n                                        <FontAwesomeIcon icon={faGithub} />\r\n                                    </span>\r\n                                    <input ref={this.usernameRef} onKeyDown={this.enterKeyDown} type=\"text\" className=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"username\" autoFocus />\r\n                                    <button className=\"btn btn-success\" onClick={this.searchUser}>Search user</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {this.state.error ?\r\n                            <h2 className=\"text-center text-white\">{this.state.message}</h2> :\r\n                            <div className=\"row\" id=\"masonry\">\r\n                                {this.state.userdata &&\r\n                                    <React.Fragment>\r\n                                        <UserInfo userdata={this.state.userdata} masonry={this.masonryEffect} />\r\n                                        <GitHubStats userdata={this.state.userdata} CopyCode={this.copyStatCode} masonry={this.masonryEffect} />\r\n                                        <UserContributions userdata={this.state.userdata} CopyCode={this.copyStatCode} masonry={this.masonryEffect} />\r\n                                        <UserStreaks userdata={this.state.userdata} CopyCode={this.copyStatCode} masonry={this.masonryEffect} />\r\n                                        <MostUsedLanguages userdata={this.state.userdata} CopyCode={this.copyStatCode} masonry={this.masonryEffect} />\r\n                                        <Repositories userdata={this.state.userdata} masonry={this.masonryEffect} />\r\n                                    </React.Fragment>\r\n                                }\r\n                                {this.state.userdata.location &&\r\n                                    <LocationDevs userdata={this.state.userdata} masonry={this.masonryEffect} />\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React, { Component } from \"react\";\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <main>\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-6 offset-md-3\">\r\n                            <div className=\"card shadow mt-5\">\r\n                                <div className=\"card-header text-white text-center\">\r\n                                    <h2 className=\"card-title\">This page does not exist</h2>\r\n                                </div>\r\n                                <div className=\"card-body bg-dark text-center\">\r\n                                    <a href=\"/\" className=\"btn btn-success w-75 mx-auto\">Home</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error;","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"../views/partials/header\";\r\nimport Index from \"../views/index\";\r\nimport Error from \"../views/error\";\r\n\r\nclass Router extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Index} />\r\n                    <Route exact path=\"/home\" component={Index} />\r\n                    <Route exact path=\"/GitHub-Stats\" component={Index} />\r\n                    <Route path=\"*\" component={Error} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Router;","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Router from \"./router/router\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router />\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}